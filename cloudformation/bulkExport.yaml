#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

Resources:
  GlueJobRelatedLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: 'For the glue actions the Resources statement must be *, to further lock down the access you can use IAM Tags & Conditionals'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: glueAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - glue:StartJobRun
                  - glue:GetJobRun
                  - glue:BatchStopJobRun
                Resource: '*'
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:GetItem
                Resource:
                  - !GetAtt ExportRequestDynamoDBTable.Arn
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - !GetAtt DynamodbKMSKey.Arn

  GlueScriptsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref FHIRLogsBucket
        LogFilePrefix: 'GlueScriptsBucket'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  GlueScriptsBucketHttpsOnlyPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref GlueScriptsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: '*'
            Action:
              - s3:*
            Resource:
              - !GetAtt GlueScriptsBucket.Arn
              - !Join ['', [!GetAtt GlueScriptsBucket.Arn, '/*']]
            Condition:
              Bool:
                'aws:SecureTransport': false

  BulkExportResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationRule
            Status: Enabled
            ExpirationInDays: '3'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref FHIRLogsBucket
        LogFilePrefix: 'BulkExportResultsBucket'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  BulkExportResultsBucketHttpsOnlyPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BulkExportResultsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: '*'
            Action:
              - s3:*
            Resource:
              - !GetAtt BulkExportResultsBucket.Arn
              - !Join ['', [!GetAtt BulkExportResultsBucket.Arn, '/*']]
            Condition:
              Bool:
                'aws:SecureTransport': false

  GlueJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: ddbAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:Scan
                Resource: !GetAtt ResourceDynamoDBTableV2.Arn
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - !GetAtt DynamodbKMSKey.Arn
        - PolicyName: s3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Join ['', ['arn:aws:s3:::', !Ref BulkExportResultsBucket, '/*']]
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Join ['', ['arn:aws:s3:::', !Ref GlueScriptsBucket, '/*']]
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                  - kms:Encrypt
                Resource:
                  - !GetAtt S3KMSKey.Arn
        - PolicyName: logAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:AssociateKmsKey
                Resource:
                  - arn:aws:logs:*:*:/aws-glue/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                  - kms:Encrypt
                Resource:
                  - !GetAtt LogKMSKey.Arn

  GlueJobSecurityConfig:
    Type: AWS::Glue::SecurityConfiguration
    Properties:
      EncryptionConfiguration:
        CloudWatchEncryption:
          KmsKeyArn: !GetAtt LogKMSKey.Arn
          CloudWatchEncryptionMode: SSE-KMS
        S3Encryptions:
          - KmsKeyArn: !GetAtt S3KMSKey.Arn
            S3EncryptionMode: SSE-KMS
        JobBookmarksEncryption:
          KmsKeyArn: !GetAtt LogKMSKey.Arn
          JobBookmarksEncryptionMode: CSE-KMS
      Name: 'export-security-config'
    DependsOn:
      - LogKMSKey

  ExportGlueJob:
    Type: AWS::Glue::Job
    DependsOn: UploadGlueScriptsCustomResource
    Properties:
      Role: !GetAtt GlueJobRole.Arn
      GlueVersion: '2.0'
      WorkerType: !Ref ExportGlueWorkerType
      NumberOfWorkers: !Ref ExportGlueNumberWorkers
      SecurityConfiguration: !Ref GlueJobSecurityConfig
      Command:
        ScriptLocation: !Join ['', ['s3://', !Ref GlueScriptsBucket, '/export-script.py']]
        Name: glueetl
        PythonVersion: '3'
      ExecutionProperty:
        MaxConcurrentRuns: !If
          - isMultiTenancyEnabled
          # Adjust this number based on the number of tenants.
          # The default throttling on fhir-works-on-aws-persistence-ddb allows 2 concurrent export jobs per tenant
          - 30
          - 2
      DefaultArguments:
        '--TempDir': !Join ['', ['s3://', !Ref BulkExportResultsBucket, '/temp']]
        '--ddbTableName': '${self:custom.resourceTableName}'
        '--workerType': !Ref ExportGlueWorkerType
        '--numberWorkers': !Ref ExportGlueNumberWorkers
        '--s3OutputBucket': !Ref BulkExportResultsBucket
        '--s3ScriptBucket': !Ref GlueScriptsBucket
        '--enable-metrics': 'true'
        '--enable-continuous-cloudwatch-log': 'true'
        '--enable-continuous-log-filter': 'true'

  ExportResultsSignerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: s3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Join ['', [!GetAtt BulkExportResultsBucket.Arn, '/*']]

  UpdateStatusLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: ddbAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt ExportRequestDynamoDBTable.Arn
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - !GetAtt DynamodbKMSKey.Arn

  UploadGlueScriptsCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt UploadGlueScriptsLambdaFunction.Arn # serverless by convention capitalizes first letter and suffixes with "LambdaFunction"
      RandomValue: ${sls:instanceId} # This forces the upload to happen on every deployment

  UploadGlueScriptsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: s3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Join ['', ['arn:aws:s3:::', !Ref GlueScriptsBucket, '/*']]
