#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

name: Unit Tests, Deploy, Integration Test
on:
  push:
    branches:
      - develop
jobs:
  build-validate:
    name: Build and validate
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install dependencies
        run: |
          cd auditLogMover
          yarn install
          cd ..
          yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build, lint, and run unit tests
        run: |
          cd auditLogMover
          yarn release
          cd ..
          yarn release
      - name: Build Hapi validator
        run: |
          cd javaHapiValidatorLambda
          mvn --batch-mode --update-snapshots --no-transfer-progress clean install
          cd ..
  pre-deployment-check:
    needs: build-validate
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:
      - name: 'Block Concurrent Deployments'
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    needs: pre-deployment-check
    name: Deploy to Dev
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup config file
        env:
          DEV_AWS_USER_ACCOUNT_ARN: ${{ secrets.DEV_AWS_USER_ACCOUNT_ARN }}
        run: sed "s#<dev-arn>#$DEV_AWS_USER_ACCOUNT_ARN#g" serverless_config.template.json > serverless_config.json
      - name: Install npm dependencies
        run: yarn install
      - name: Download US Core IG
        run: |
          mkdir -p implementationGuides
          curl https://www.hl7.org/fhir/us/core/package.tgz | tar xz -C implementationGuides
      - name: Compile IGs
        run: yarn run compile-igs
      - name: Install serverless
        run: npm install -g serverless
      - name: Deploy Hapi validator
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd javaHapiValidatorLambda
          mvn --batch-mode --update-snapshots --no-transfer-progress clean install
          serverless deploy --stage dev --region us-west-2 --conceal
          cd ..
      - name: Deploy FHIR Server and ddbToEs
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          serverless deploy --stage dev --region us-west-2 --useHapiValidator true --conceal
      - name: Deploy auditLogMover
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd auditLogMover
          yarn install
          serverless deploy --stage dev --region us-west-2 --conceal
  crucible-test:
    needs: deploy
    name: Run Crucible Tests
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          repository: nguyen102/plan_executor
          ref: r4-aws-fhir-solution
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Install dependency
        run: |
          gem install bundler
          bundle install
      - name: Execute tests
        env:
          SERVICE_URL: ${{ secrets.SERVICE_URL}}
          API_KEY: ${{ secrets.API_KEY }}
          COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID}}
          COGNITO_USERNAME: ${{ secrets.COGNITO_USERNAME_PRACTITIONER }}
          COGNITO_PASSWORD: ${{ secrets.COGNITO_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          ACCESS_TOKEN=$(aws cognito-idp initiate-auth --region us-west-2 --client-id $COGNITO_CLIENT_ID \
          --auth-flow USER_PASSWORD_AUTH --auth-parameters USERNAME=$COGNITO_USERNAME,PASSWORD=$COGNITO_PASSWORD | \
          python -c 'import json,sys;obj=json.load(sys.stdin);print obj["AuthenticationResult"]["AccessToken"]')
          bundle exec rake crucible:execute_hearth_tests[$SERVICE_URL,$API_KEY,$ACCESS_TOKEN]
  custom-integration-tests:
    needs: crucible-test
    name: Run custom integration tests
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: |
          yarn install
      - name: Execute tests
        env:
          API_URL: ${{ secrets.SERVICE_URL}}
          API_KEY: ${{ secrets.API_KEY }}
          API_AWS_REGION: ${{ secrets.API_AWS_REGION }}
          COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID}}
          COGNITO_USERNAME_PRACTITIONER: ${{ secrets.COGNITO_USERNAME_PRACTITIONER }}
          COGNITO_USERNAME_AUDITOR: ${{ secrets.COGNITO_USERNAME_AUDITOR }}
          COGNITO_PASSWORD: ${{ secrets.COGNITO_PASSWORD }}
        run: yarn int-test

  merge-develop-to-mainline:
    needs: custom-integration-tests
    name: Merge develop to mainline
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{secrets.MERGE_TOKEN}}
          fetch-depth: 0
      # There's no way for github actions to push to a protected branch. This is a workaround
      # See https://github.community/t/how-to-push-to-protected-branches-in-a-github-action/16101/30
      - name: Temporarily disable branch protection
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
          owner: awslabs
          repo: fhir-works-on-aws-deployment
          branch: mainline
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}
      - name: Merge to mainline
        run: |
          git checkout mainline
          echo
          echo "  Attempting to merge the 'develop' branch ($(git log -1 --pretty=%H develop))"
          echo "  into the 'mainline' branch ($(git log -1 --pretty=%H mainline))"
          echo
          git merge --ff-only --no-edit develop
          git push origin mainline
      - name: Enable branch protection
        uses: octokit/request-action@v2.x
        if: always() # Make sure to enable branch protection even if other steps fail
        with:
          route: POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins
          owner: awslabs
          repo: fhir-works-on-aws-deployment
          branch: mainline
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}
